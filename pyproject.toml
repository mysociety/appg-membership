[tool.poetry]
name = "appg_membership"
version = "0.1.0"
description = "Scraper and raw_data for APPG memberships"
authors = []

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
data_common = { path = "src/data_common/", develop = true }
pydantic-settings = "^2.9.1"
pydantic = {extras = ["email"], version = "^2.11.3"}
pydantic-ai = "^0.1.6"
markdownify = "^1.1.0"
duckduckgo-search = "^8.0.1"
tavily-python = "^0.7.0"
mysoc-validator = "^1.1.4"
pypdf2 = "^3.0.1"
levenshtein = "^0.27.1"

[tool.poetry.dev-dependencies]
pytest = "^7.1.1"

[tool.poetry.scripts]
project = 'appg_membership.__main__:main'
notebook = "data_common.notebookcli.__main__:run"
dataset = "data_common.dataset.__main__:run"

[tool.pyright]
include = ["src", "notebooks"]
exclude=["src/data_common/typings"]
stubPath="src/data_common/typings"
typeCheckingMode="basic"
reportPrivateImportUsage="warning"

[notebook.settings]
default_page_title = "Settings file defined title"

[tool.dataset]
dataset_dir = "data/packages"
publish_dir = "docs/"
publish_url = "https://pages.mysociety.org/appg_membership/"
credit_text = "If you find this data useful, please let us know to help us make the case for future funding."
credit_url = "https://survey.alchemer.com/s3/6876792/Data-usage"


[tool.ruff]
extend-exclude = ["migrations", "*.pyi"]

[tool.ruff.lint]
select = [
    "E",
    # flake8
    "F",
    # isort
    "I",
]
ignore = [
    # line too long, sorted with formatter where it can be
    "E501", 
]


[tool.ruff.lint.isort]
known-first-party = ["hub"]
section-order = [
  "future",
  "standard-library",
  "django",
  "third-party",
  "first-party",
  "local-folder"
]

[tool.ruff.lint.isort.sections]
django = ["django"]
